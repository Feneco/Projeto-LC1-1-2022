(define-type T_1) 
(define permutations_2::(-> (tuple int (-> real T_1) ) (tuple int (-> real T_1) ) bool)) 
(define rest_3::(-> (tuple int (-> real T_1) ) (tuple int (-> real T_1) ))) 
(define x!1_4::(tuple int (-> real T_1) )) 
(define delete_5::(-> (tuple int (-> real T_1) ) int (tuple int (-> real T_1) ))) 
(define h2_6::(tuple int (-> real T_1) )) 
(define j_7::int) 
(define add_first_8::(-> T_1 (tuple int (-> real T_1) ) (tuple int (-> real T_1) ))) 
(define even?_9::(-> real bool)) 
(assert (even?_9  0)) 
(assert (<  j_7 (select h2_6 1))) 
(assert (not (permutations_2  (rest_3  x!1_4) (delete_5  h2_6 j_7)))) 
(assert (permutations_2  h2_6 (add_first_8  ((select h2_6 2)  j_7) (delete_5  h2_6 j_7)))) 
(assert (=  ((select h2_6 2)  j_7) ((select x!1_4 2)  0))) 
(assert (not (=  (select h2_6 1) 0))) 
(assert (not (=  (select x!1_4 1) 0))) 
(assert (permutations_2  x!1_4 h2_6)) 
(assert (not (=  (select x!1_4 1) (select h2_6 1)))) 
(check)
